function [regresdiff] = getregresdiff(FM,regrestype,output)
% GETREGRESDIFF calculate the difference between the model 
%					 	antecedents and consequents.
%
% [regresdiff] = SUGVAL(FM,regrestype)
%    Input:
%       FM 			 ..... fuzzy model
%       regrestype ..... model antecedent or consequent part 
%								 'ante': antecedent part
%								 'cons': consequent part
%		  output		 ..... output number
%
%    Output:
%		  regresdiff ..... difference pattern 
%		  (the zero positions indicate missing variable)
%
% (c) Stanimir Mollov, Robert Babuska, 1994-2000
%====================================================

switch regrestype
case 'ante'
   pos = 1;
case 'cons'   
   pos = 2;
end
%make a union of antecedent and consequents variables
      unitedoutputs = [];
      unitedinputs = [];
      for united = 1:FM.no,
         unitedoutputs{output,united} = union(FM.Ny{1}{output,united},...
	              									    FM.Ny{2}{output,united});
      end
      for united = 1:FM.ni,
         unitedinputs{output,united} = union(FM.Nu{1}{output,united},...
            									  		FM.Nu{2}{output,united});
      end
      %end union
      
      %Check if the current var is in the antecedent/consequent part;
      offset = 0;
      regresdiff = ones(1,size(FM.zmin{output},2)-1);
      for united = 1:FM.no
         diffpos = setdiff(unitedoutputs{output,united},FM.Ny{pos}{output,united});
         if ~isempty(unitedoutputs{output,united}) 
            if ~isempty(diffpos) 
               regresdiff(1,offset + diffpos) = 0;
            end
         %elseif isempty(diffpos)
         %   regresdiff = 0*regresdiff;
         end
         offset = offset + length(unitedoutputs{output,united});
      end
      for united = 1:FM.ni
         diffpos = setdiff(unitedinputs{output,united},FM.Nu{pos}{output,united});
         if (~isempty(diffpos) & diffpos ) %| isempty(diffpos)
            regresdiff(1,offset + diffpos) = 0;
         elseif ~diffpos & isempty(FM.Nu{pos}{output,united})
         	regresdiff(1,offset + 1) = 0;% = 0*regresdiff;   
         end
         offset = offset + length(unitedinputs{output,united});
      end
      % end check
